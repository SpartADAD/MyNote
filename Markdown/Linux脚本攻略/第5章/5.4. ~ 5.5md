# 5.4	cURL入门

​			cURL可以使用HTTP、HTTPS、FTP协议在客户端与服务器之间传递数据。它支持POST、cookie、认证、从指定偏移处下载部分文件、参照页(referer)、用户代理字符串、扩展头部、限速、文件大小限制、进度条等特性。cURL可用于网站维护、数据检索以及服务器配置核对。

## 5.4.1　预备知识

​			cURL默认会将下载文件输出到 stdout ,将进度信息输出到 stderr 。如果不想显示进度信息,可以使用 --silent 选项。



## 5.4.2	实战演练

​			curl 命令的用途广泛,其功能包括下载、发送各种HTTP请求以及指定HTTP头部。

​			1) 使用下列命令将下载文件输出到stdout

```
curl URL
```

​			2) 选项 -O 指明将下载数据写入文件,采用从URL中解析出的文件名。注意,其中的URL必须是完整的,不能仅是站点的域名:

```
curl URL --silent -O
```

​			3) 选项 -o 可以指定输出文件名。如果使用了该选项,只需要写明站点的域名就可以下载其主页了:

```
curl URL -o name
```

​			4) 选项 -- silent可以让 curl 命令不显示进度信息:

```
curl URL --silent
```

​			5) 如果需要在下载过程中显示形如 # 的进度条,可以使用选项 --progress :

```
curl URL -o index.html --progress
```



## 5.4.3　工作原理

​			cURL可以将Web页面或远程文件下载到本地系统。你可以利用选项 -O 和 -o 来设置目标文件名,利用 --silent 和 --progress 来控制是否显示进度信息。



## 5.4.4　补充内容

​			1.断点续传：
​				cURL能够从特定的文件偏移处继续下载。如果你每天有流量限制,但又要下载大文件时,这个功能非常有用。

```
curl URL/file -C offset
```

​				偏移量是以字节为单位的整数。如果只是想断点续传,那么cURL不需要指定准确的字节偏移。要是你希望cURL推断出正确的续传位置,请使用选项 -C - ,就像这样:

```
curl -C - URL
```

cURL会自动计算出应该从哪里开始续传。

​			2.用cURL设置参照页字符串：

------

​				PS：参照页(referrer) 1 是位于HTTP头部中的一个字符串,用来标识用户是从哪
个页面到达当前页面的。如果用户通过点击页面A中的某个链接跳转到了页面B,
那么页面B头部的参照页字符串就会包含页面A的URL。

------

​				一些动态页面会在返回HTML数据前检测参照页字符串。例如,如果用户是通过Google搜索来到了当前页面,那么页面上就可以显示一个Google的logo;如果用户是通过手动输入URL来到当前页面,则显示其他内容。

​				Web开发人员可以根据条件作出判断:如果参照页是www.google.com,那么就返回一个Google页面,否则返回其他页面。
​				可以用 curl 命令的 --referer 选项指定参照页字符串:

```
curl --referer Referer_URL target_URL
```

​			3.用cURL设置cookie
我们可以用 curl 来指定并存储HTTP操作过程中使用到的cookie。
选项 --cookieCOOKIE_IDENTIFER 可以指定提供哪些cookie。cookies需要以 name=value的形式来给出。多个cookie之间使用分号分隔:

```
curl http://example.com --cookie "user=username;pass=hack"
```

选项 --cookie-jar 可以将cookie另存为文件:

```
curl URL --cookie-jar cookie_file
```

​			4.用cURL设置用户代理字符串
​				如果不指定用户代理(user agent),一些需要检验用户代理的页面就无法显示。例如,有些旧网站只能在Internet Explorer(IE)下正常工作。如果使用其他浏览器,则会提示只能用IE访问。这是因为这些网站检查了用户代理。你可以用 curl 来设置用户代理。
cURL的选项 --user-agent 或 -A 用于设置用户代理:

```
curl URL --user-agent "Mozilla/5.0"
```

cURL也能够发送其他HTTP头部信息。使用 -H "Header" 传递多个头部信息:



------

浏览器和爬虫使用的用户代理字符串各不相同。你可以在这里找到其中的一部分:http://www.useragentstring.com/pages/useragentstring.php。

------

​	

​			5.限定cURL可占用的带宽
​				如果多个用户共享带宽有限,我们可以用 --limit-rate 限制cURL的下载速度:

```
curl URL --limit-rate 20k
```

在命令中用 k (千字节)和 m (兆字节)指定下载速度限制。

​			6.指定最大下载量
​				可以用 --max-filesize 选项指定可下载的最大文件大小:

```
curl URL --max-filesize bytes
```



------

PS:如果文件大小超出限制,命令返回一个非0的退出码。如果文件下载成功,
则返回0。

------

​			7.用cURL进行认证
​				可以用 curl 的选项 -u 完成HTTP或FTP认证。使用 -u username:password 来指定用户名和密码:

```
curl -u user:pass http://test_auth.com
```

如果你喜欢经提示后输入密码,只需要使用用户名即可:

```
curl -u user http://test_auth.com
```

​			8.只打印响应头部信息(不包括数据部分)
​				只检查头部信息就足以完成很多检查或统计。例如,如果要检查某个页面是否能够打开,并不需要下载整个页面内容。只读取HTTP响应头部就足够了。 检查HTTP头部的另一种用法就是通过检查其中的 Content-Length 字段来得知文件的大小,或是检查 Last-Modified 字段,在下载之前了解文件是否比当前版本更新。 选项 -I 或 --head 可以只打印HTTP头部信息,无须下载远程文件:

```
curl -I http://knopper.net
```





# 5.5　从命令行访问未读的 Gmail 邮件

暂略，等到用到再学